#include "ModelViewer_pcp.h"

#include "QtRigidCircleObject.h"

QtRigidCircleObject::QtRigidCircleObject(
	QOpenGLFunctions_3_3_Core& _gl) :
	gl(_gl),
    vao(0), vbo(0), veo(0),
    edge_node_num(0) 
{

}

QtRigidCircleObject::~QtRigidCircleObject() { clear(); }

void QtRigidCircleObject::clear()
{
	if (veo)
	{
		gl.glDeleteBuffers(1, &veo);
		veo = 0;
	}
	if (vbo)
	{
		gl.glDeleteBuffers(1, &vbo);
		vbo = 0;
	}
	if (vao)
	{
		gl.glDeleteVertexArrays(1, &vao);
		vao = 0;
	}
	edge_node_num = 0;
}

static const GLuint circle_node_num = 360;

static const GLfloat circle_nodes[] = {
    1.000000f, 0.000000f, // node 0
    0.999848f, 0.017452f, // node 1
    0.999391f, 0.034899f, // node 2
    0.998630f, 0.052336f, // node 3
    0.997564f, 0.069756f, // node 4
    0.996195f, 0.087156f, // node 5
    0.994522f, 0.104528f, // node 6
    0.992546f, 0.121869f, // node 7
    0.990268f, 0.139173f, // node 8
    0.987688f, 0.156434f, // node 9
    0.984808f, 0.173648f, // node 10
    0.981627f, 0.190809f, // node 11
    0.978148f, 0.207912f, // node 12
    0.974370f, 0.224951f, // node 13
    0.970296f, 0.241922f, // node 14
    0.965926f, 0.258819f, // node 15
    0.961262f, 0.275637f, // node 16
    0.956305f, 0.292372f, // node 17
    0.951057f, 0.309017f, // node 18
    0.945519f, 0.325568f, // node 19
    0.939693f, 0.342020f, // node 20
    0.933580f, 0.358368f, // node 21
    0.927184f, 0.374607f, // node 22
    0.920505f, 0.390731f, // node 23
    0.913545f, 0.406737f, // node 24
    0.906308f, 0.422618f, // node 25
    0.898794f, 0.438371f, // node 26
    0.891007f, 0.453990f, // node 27
    0.882948f, 0.469472f, // node 28
    0.874620f, 0.484810f, // node 29
    0.866025f, 0.500000f, // node 30
    0.857167f, 0.515038f, // node 31
    0.848048f, 0.529919f, // node 32
    0.838671f, 0.544639f, // node 33
    0.829038f, 0.559193f, // node 34
    0.819152f, 0.573576f, // node 35
    0.809017f, 0.587785f, // node 36
    0.798635f, 0.601815f, // node 37
    0.788011f, 0.615662f, // node 38
    0.777146f, 0.629320f, // node 39
    0.766044f, 0.642788f, // node 40
    0.754710f, 0.656059f, // node 41
    0.743145f, 0.669131f, // node 42
    0.731354f, 0.681998f, // node 43
    0.719340f, 0.694658f, // node 44
    0.707107f, 0.707107f, // node 45
    0.694658f, 0.719340f, // node 46
    0.681998f, 0.731354f, // node 47
    0.669131f, 0.743145f, // node 48
    0.656059f, 0.754710f, // node 49
    0.642788f, 0.766044f, // node 50
    0.629320f, 0.777146f, // node 51
    0.615662f, 0.788011f, // node 52
    0.601815f, 0.798635f, // node 53
    0.587785f, 0.809017f, // node 54
    0.573576f, 0.819152f, // node 55
    0.559193f, 0.829038f, // node 56
    0.544639f, 0.838671f, // node 57
    0.529919f, 0.848048f, // node 58
    0.515038f, 0.857167f, // node 59
    0.500000f, 0.866025f, // node 60
    0.484810f, 0.874620f, // node 61
    0.469472f, 0.882948f, // node 62
    0.453990f, 0.891007f, // node 63
    0.438371f, 0.898794f, // node 64
    0.422618f, 0.906308f, // node 65
    0.406737f, 0.913545f, // node 66
    0.390731f, 0.920505f, // node 67
    0.374607f, 0.927184f, // node 68
    0.358368f, 0.933580f, // node 69
    0.342020f, 0.939693f, // node 70
    0.325568f, 0.945519f, // node 71
    0.309017f, 0.951057f, // node 72
    0.292372f, 0.956305f, // node 73
    0.275637f, 0.961262f, // node 74
    0.258819f, 0.965926f, // node 75
    0.241922f, 0.970296f, // node 76
    0.224951f, 0.974370f, // node 77
    0.207912f, 0.978148f, // node 78
    0.190809f, 0.981627f, // node 79
    0.173648f, 0.984808f, // node 80
    0.156434f, 0.987688f, // node 81
    0.139173f, 0.990268f, // node 82
    0.121869f, 0.992546f, // node 83
    0.104528f, 0.994522f, // node 84
    0.087156f, 0.996195f, // node 85
    0.069756f, 0.997564f, // node 86
    0.052336f, 0.998630f, // node 87
    0.034899f, 0.999391f, // node 88
    0.017452f, 0.999848f, // node 89
    0.000000f, 1.000000f, // node 90
    -0.017452f, 0.999848f, // node 91
    -0.034899f, 0.999391f, // node 92
    -0.052336f, 0.998630f, // node 93
    -0.069756f, 0.997564f, // node 94
    -0.087156f, 0.996195f, // node 95
    -0.104528f, 0.994522f, // node 96
    -0.121869f, 0.992546f, // node 97
    -0.139173f, 0.990268f, // node 98
    -0.156434f, 0.987688f, // node 99
    -0.173648f, 0.984808f, // node 100
    -0.190809f, 0.981627f, // node 101
    -0.207912f, 0.978148f, // node 102
    -0.224951f, 0.974370f, // node 103
    -0.241922f, 0.970296f, // node 104
    -0.258819f, 0.965926f, // node 105
    -0.275637f, 0.961262f, // node 106
    -0.292372f, 0.956305f, // node 107
    -0.309017f, 0.951057f, // node 108
    -0.325568f, 0.945519f, // node 109
    -0.342020f, 0.939693f, // node 110
    -0.358368f, 0.933580f, // node 111
    -0.374607f, 0.927184f, // node 112
    -0.390731f, 0.920505f, // node 113
    -0.406737f, 0.913545f, // node 114
    -0.422618f, 0.906308f, // node 115
    -0.438371f, 0.898794f, // node 116
    -0.453990f, 0.891007f, // node 117
    -0.469472f, 0.882948f, // node 118
    -0.484810f, 0.874620f, // node 119
    -0.500000f, 0.866025f, // node 120
    -0.515038f, 0.857167f, // node 121
    -0.529919f, 0.848048f, // node 122
    -0.544639f, 0.838671f, // node 123
    -0.559193f, 0.829038f, // node 124
    -0.573576f, 0.819152f, // node 125
    -0.587785f, 0.809017f, // node 126
    -0.601815f, 0.798635f, // node 127
    -0.615662f, 0.788011f, // node 128
    -0.629320f, 0.777146f, // node 129
    -0.642788f, 0.766044f, // node 130
    -0.656059f, 0.754710f, // node 131
    -0.669131f, 0.743145f, // node 132
    -0.681998f, 0.731354f, // node 133
    -0.694658f, 0.719340f, // node 134
    -0.707107f, 0.707107f, // node 135
    -0.719340f, 0.694658f, // node 136
    -0.731354f, 0.681998f, // node 137
    -0.743145f, 0.669131f, // node 138
    -0.754710f, 0.656059f, // node 139
    -0.766044f, 0.642788f, // node 140
    -0.777146f, 0.629320f, // node 141
    -0.788011f, 0.615662f, // node 142
    -0.798635f, 0.601815f, // node 143
    -0.809017f, 0.587785f, // node 144
    -0.819152f, 0.573576f, // node 145
    -0.829038f, 0.559193f, // node 146
    -0.838671f, 0.544639f, // node 147
    -0.848048f, 0.529919f, // node 148
    -0.857167f, 0.515038f, // node 149
    -0.866025f, 0.500000f, // node 150
    -0.874620f, 0.484810f, // node 151
    -0.882948f, 0.469472f, // node 152
    -0.891007f, 0.453990f, // node 153
    -0.898794f, 0.438371f, // node 154
    -0.906308f, 0.422618f, // node 155
    -0.913545f, 0.406737f, // node 156
    -0.920505f, 0.390731f, // node 157
    -0.927184f, 0.374607f, // node 158
    -0.933580f, 0.358368f, // node 159
    -0.939693f, 0.342020f, // node 160
    -0.945519f, 0.325568f, // node 161
    -0.951057f, 0.309017f, // node 162
    -0.956305f, 0.292372f, // node 163
    -0.961262f, 0.275637f, // node 164
    -0.965926f, 0.258819f, // node 165
    -0.970296f, 0.241922f, // node 166
    -0.974370f, 0.224951f, // node 167
    -0.978148f, 0.207912f, // node 168
    -0.981627f, 0.190809f, // node 169
    -0.984808f, 0.173648f, // node 170
    -0.987688f, 0.156434f, // node 171
    -0.990268f, 0.139173f, // node 172
    -0.992546f, 0.121869f, // node 173
    -0.994522f, 0.104528f, // node 174
    -0.996195f, 0.087156f, // node 175
    -0.997564f, 0.069756f, // node 176
    -0.998630f, 0.052336f, // node 177
    -0.999391f, 0.034899f, // node 178
    -0.999848f, 0.017452f, // node 179
    -1.000000f, 0.000000f, // node 180
    -0.999848f, -0.017452f, // node 181
    -0.999391f, -0.034899f, // node 182
    -0.998630f, -0.052336f, // node 183
    -0.997564f, -0.069756f, // node 184
    -0.996195f, -0.087156f, // node 185
    -0.994522f, -0.104528f, // node 186
    -0.992546f, -0.121869f, // node 187
    -0.990268f, -0.139173f, // node 188
    -0.987688f, -0.156434f, // node 189
    -0.984808f, -0.173648f, // node 190
    -0.981627f, -0.190809f, // node 191
    -0.978148f, -0.207912f, // node 192
    -0.974370f, -0.224951f, // node 193
    -0.970296f, -0.241922f, // node 194
    -0.965926f, -0.258819f, // node 195
    -0.961262f, -0.275637f, // node 196
    -0.956305f, -0.292372f, // node 197
    -0.951057f, -0.309017f, // node 198
    -0.945519f, -0.325568f, // node 199
    -0.939693f, -0.342020f, // node 200
    -0.933580f, -0.358368f, // node 201
    -0.927184f, -0.374607f, // node 202
    -0.920505f, -0.390731f, // node 203
    -0.913545f, -0.406737f, // node 204
    -0.906308f, -0.422618f, // node 205
    -0.898794f, -0.438371f, // node 206
    -0.891007f, -0.453990f, // node 207
    -0.882948f, -0.469472f, // node 208
    -0.874620f, -0.484810f, // node 209
    -0.866025f, -0.500000f, // node 210
    -0.857167f, -0.515038f, // node 211
    -0.848048f, -0.529919f, // node 212
    -0.838671f, -0.544639f, // node 213
    -0.829038f, -0.559193f, // node 214
    -0.819152f, -0.573576f, // node 215
    -0.809017f, -0.587785f, // node 216
    -0.798635f, -0.601815f, // node 217
    -0.788011f, -0.615662f, // node 218
    -0.777146f, -0.629320f, // node 219
    -0.766044f, -0.642788f, // node 220
    -0.754710f, -0.656059f, // node 221
    -0.743145f, -0.669131f, // node 222
    -0.731354f, -0.681998f, // node 223
    -0.719340f, -0.694658f, // node 224
    -0.707107f, -0.707107f, // node 225
    -0.694658f, -0.719340f, // node 226
    -0.681998f, -0.731354f, // node 227
    -0.669131f, -0.743145f, // node 228
    -0.656059f, -0.754710f, // node 229
    -0.642788f, -0.766044f, // node 230
    -0.629320f, -0.777146f, // node 231
    -0.615662f, -0.788011f, // node 232
    -0.601815f, -0.798635f, // node 233
    -0.587785f, -0.809017f, // node 234
    -0.573576f, -0.819152f, // node 235
    -0.559193f, -0.829038f, // node 236
    -0.544639f, -0.838671f, // node 237
    -0.529919f, -0.848048f, // node 238
    -0.515038f, -0.857167f, // node 239
    -0.500000f, -0.866025f, // node 240
    -0.484810f, -0.874620f, // node 241
    -0.469472f, -0.882948f, // node 242
    -0.453990f, -0.891007f, // node 243
    -0.438371f, -0.898794f, // node 244
    -0.422618f, -0.906308f, // node 245
    -0.406737f, -0.913545f, // node 246
    -0.390731f, -0.920505f, // node 247
    -0.374607f, -0.927184f, // node 248
    -0.358368f, -0.933580f, // node 249
    -0.342020f, -0.939693f, // node 250
    -0.325568f, -0.945519f, // node 251
    -0.309017f, -0.951057f, // node 252
    -0.292372f, -0.956305f, // node 253
    -0.275637f, -0.961262f, // node 254
    -0.258819f, -0.965926f, // node 255
    -0.241922f, -0.970296f, // node 256
    -0.224951f, -0.974370f, // node 257
    -0.207912f, -0.978148f, // node 258
    -0.190809f, -0.981627f, // node 259
    -0.173648f, -0.984808f, // node 260
    -0.156434f, -0.987688f, // node 261
    -0.139173f, -0.990268f, // node 262
    -0.121869f, -0.992546f, // node 263
    -0.104528f, -0.994522f, // node 264
    -0.087156f, -0.996195f, // node 265
    -0.069756f, -0.997564f, // node 266
    -0.052336f, -0.998630f, // node 267
    -0.034899f, -0.999391f, // node 268
    -0.017452f, -0.999848f, // node 269
    -0.000000f, -1.000000f, // node 270
    0.017452f, -0.999848f, // node 271
    0.034899f, -0.999391f, // node 272
    0.052336f, -0.998630f, // node 273
    0.069756f, -0.997564f, // node 274
    0.087156f, -0.996195f, // node 275
    0.104528f, -0.994522f, // node 276
    0.121869f, -0.992546f, // node 277
    0.139173f, -0.990268f, // node 278
    0.156434f, -0.987688f, // node 279
    0.173648f, -0.984808f, // node 280
    0.190809f, -0.981627f, // node 281
    0.207912f, -0.978148f, // node 282
    0.224951f, -0.974370f, // node 283
    0.241922f, -0.970296f, // node 284
    0.258819f, -0.965926f, // node 285
    0.275637f, -0.961262f, // node 286
    0.292372f, -0.956305f, // node 287
    0.309017f, -0.951057f, // node 288
    0.325568f, -0.945519f, // node 289
    0.342020f, -0.939693f, // node 290
    0.358368f, -0.933580f, // node 291
    0.374607f, -0.927184f, // node 292
    0.390731f, -0.920505f, // node 293
    0.406737f, -0.913545f, // node 294
    0.422618f, -0.906308f, // node 295
    0.438371f, -0.898794f, // node 296
    0.453990f, -0.891007f, // node 297
    0.469472f, -0.882948f, // node 298
    0.484810f, -0.874620f, // node 299
    0.500000f, -0.866025f, // node 300
    0.515038f, -0.857167f, // node 301
    0.529919f, -0.848048f, // node 302
    0.544639f, -0.838671f, // node 303
    0.559193f, -0.829038f, // node 304
    0.573576f, -0.819152f, // node 305
    0.587785f, -0.809017f, // node 306
    0.601815f, -0.798635f, // node 307
    0.615662f, -0.788011f, // node 308
    0.629320f, -0.777146f, // node 309
    0.642788f, -0.766044f, // node 310
    0.656059f, -0.754710f, // node 311
    0.669131f, -0.743145f, // node 312
    0.681998f, -0.731354f, // node 313
    0.694658f, -0.719340f, // node 314
    0.707107f, -0.707107f, // node 315
    0.719340f, -0.694658f, // node 316
    0.731354f, -0.681998f, // node 317
    0.743145f, -0.669131f, // node 318
    0.754710f, -0.656059f, // node 319
    0.766044f, -0.642788f, // node 320
    0.777146f, -0.629320f, // node 321
    0.788011f, -0.615662f, // node 322
    0.798635f, -0.601815f, // node 323
    0.809017f, -0.587785f, // node 324
    0.819152f, -0.573576f, // node 325
    0.829038f, -0.559193f, // node 326
    0.838671f, -0.544639f, // node 327
    0.848048f, -0.529919f, // node 328
    0.857167f, -0.515038f, // node 329
    0.866025f, -0.500000f, // node 330
    0.874620f, -0.484810f, // node 331
    0.882948f, -0.469472f, // node 332
    0.891007f, -0.453990f, // node 333
    0.898794f, -0.438371f, // node 334
    0.906308f, -0.422618f, // node 335
    0.913545f, -0.406737f, // node 336
    0.920505f, -0.390731f, // node 337
    0.927184f, -0.374607f, // node 338
    0.933580f, -0.358368f, // node 339
    0.939693f, -0.342020f, // node 340
    0.945519f, -0.325568f, // node 341
    0.951057f, -0.309017f, // node 342
    0.956305f, -0.292372f, // node 343
    0.961262f, -0.275637f, // node 344
    0.965926f, -0.258819f, // node 345
    0.970296f, -0.241922f, // node 346
    0.974370f, -0.224951f, // node 347
    0.978148f, -0.207912f, // node 348
    0.981627f, -0.190809f, // node 349
    0.984808f, -0.173648f, // node 350
    0.987688f, -0.156434f, // node 351
    0.990268f, -0.139173f, // node 352
    0.992546f, -0.121869f, // node 353
    0.994522f, -0.104528f, // node 354
    0.996195f, -0.087156f, // node 355
    0.997564f, -0.069756f, // node 356
    0.998630f, -0.052336f, // node 357
    0.999391f, -0.034899f, // node 358
    0.999848f, -0.017452f // node 359
};

static const GLuint circle_edge_num = 360;

static const GLuint circle_edges[] = {
    0, 1, // edge 0
    1, 2, // edge 1
    2, 3, // edge 2
    3, 4, // edge 3
    4, 5, // edge 4
    5, 6, // edge 5
    6, 7, // edge 6
    7, 8, // edge 7
    8, 9, // edge 8
    9, 10, // edge 9
    10, 11, // edge 10
    11, 12, // edge 11
    12, 13, // edge 12
    13, 14, // edge 13
    14, 15, // edge 14
    15, 16, // edge 15
    16, 17, // edge 16
    17, 18, // edge 17
    18, 19, // edge 18
    19, 20, // edge 19
    20, 21, // edge 20
    21, 22, // edge 21
    22, 23, // edge 22
    23, 24, // edge 23
    24, 25, // edge 24
    25, 26, // edge 25
    26, 27, // edge 26
    27, 28, // edge 27
    28, 29, // edge 28
    29, 30, // edge 29
    30, 31, // edge 30
    31, 32, // edge 31
    32, 33, // edge 32
    33, 34, // edge 33
    34, 35, // edge 34
    35, 36, // edge 35
    36, 37, // edge 36
    37, 38, // edge 37
    38, 39, // edge 38
    39, 40, // edge 39
    40, 41, // edge 40
    41, 42, // edge 41
    42, 43, // edge 42
    43, 44, // edge 43
    44, 45, // edge 44
    45, 46, // edge 45
    46, 47, // edge 46
    47, 48, // edge 47
    48, 49, // edge 48
    49, 50, // edge 49
    50, 51, // edge 50
    51, 52, // edge 51
    52, 53, // edge 52
    53, 54, // edge 53
    54, 55, // edge 54
    55, 56, // edge 55
    56, 57, // edge 56
    57, 58, // edge 57
    58, 59, // edge 58
    59, 60, // edge 59
    60, 61, // edge 60
    61, 62, // edge 61
    62, 63, // edge 62
    63, 64, // edge 63
    64, 65, // edge 64
    65, 66, // edge 65
    66, 67, // edge 66
    67, 68, // edge 67
    68, 69, // edge 68
    69, 70, // edge 69
    70, 71, // edge 70
    71, 72, // edge 71
    72, 73, // edge 72
    73, 74, // edge 73
    74, 75, // edge 74
    75, 76, // edge 75
    76, 77, // edge 76
    77, 78, // edge 77
    78, 79, // edge 78
    79, 80, // edge 79
    80, 81, // edge 80
    81, 82, // edge 81
    82, 83, // edge 82
    83, 84, // edge 83
    84, 85, // edge 84
    85, 86, // edge 85
    86, 87, // edge 86
    87, 88, // edge 87
    88, 89, // edge 88
    89, 90, // edge 89
    90, 91, // edge 90
    91, 92, // edge 91
    92, 93, // edge 92
    93, 94, // edge 93
    94, 95, // edge 94
    95, 96, // edge 95
    96, 97, // edge 96
    97, 98, // edge 97
    98, 99, // edge 98
    99, 100, // edge 99
    100, 101, // edge 100
    101, 102, // edge 101
    102, 103, // edge 102
    103, 104, // edge 103
    104, 105, // edge 104
    105, 106, // edge 105
    106, 107, // edge 106
    107, 108, // edge 107
    108, 109, // edge 108
    109, 110, // edge 109
    110, 111, // edge 110
    111, 112, // edge 111
    112, 113, // edge 112
    113, 114, // edge 113
    114, 115, // edge 114
    115, 116, // edge 115
    116, 117, // edge 116
    117, 118, // edge 117
    118, 119, // edge 118
    119, 120, // edge 119
    120, 121, // edge 120
    121, 122, // edge 121
    122, 123, // edge 122
    123, 124, // edge 123
    124, 125, // edge 124
    125, 126, // edge 125
    126, 127, // edge 126
    127, 128, // edge 127
    128, 129, // edge 128
    129, 130, // edge 129
    130, 131, // edge 130
    131, 132, // edge 131
    132, 133, // edge 132
    133, 134, // edge 133
    134, 135, // edge 134
    135, 136, // edge 135
    136, 137, // edge 136
    137, 138, // edge 137
    138, 139, // edge 138
    139, 140, // edge 139
    140, 141, // edge 140
    141, 142, // edge 141
    142, 143, // edge 142
    143, 144, // edge 143
    144, 145, // edge 144
    145, 146, // edge 145
    146, 147, // edge 146
    147, 148, // edge 147
    148, 149, // edge 148
    149, 150, // edge 149
    150, 151, // edge 150
    151, 152, // edge 151
    152, 153, // edge 152
    153, 154, // edge 153
    154, 155, // edge 154
    155, 156, // edge 155
    156, 157, // edge 156
    157, 158, // edge 157
    158, 159, // edge 158
    159, 160, // edge 159
    160, 161, // edge 160
    161, 162, // edge 161
    162, 163, // edge 162
    163, 164, // edge 163
    164, 165, // edge 164
    165, 166, // edge 165
    166, 167, // edge 166
    167, 168, // edge 167
    168, 169, // edge 168
    169, 170, // edge 169
    170, 171, // edge 170
    171, 172, // edge 171
    172, 173, // edge 172
    173, 174, // edge 173
    174, 175, // edge 174
    175, 176, // edge 175
    176, 177, // edge 176
    177, 178, // edge 177
    178, 179, // edge 178
    179, 180, // edge 179
    180, 181, // edge 180
    181, 182, // edge 181
    182, 183, // edge 182
    183, 184, // edge 183
    184, 185, // edge 184
    185, 186, // edge 185
    186, 187, // edge 186
    187, 188, // edge 187
    188, 189, // edge 188
    189, 190, // edge 189
    190, 191, // edge 190
    191, 192, // edge 191
    192, 193, // edge 192
    193, 194, // edge 193
    194, 195, // edge 194
    195, 196, // edge 195
    196, 197, // edge 196
    197, 198, // edge 197
    198, 199, // edge 198
    199, 200, // edge 199
    200, 201, // edge 200
    201, 202, // edge 201
    202, 203, // edge 202
    203, 204, // edge 203
    204, 205, // edge 204
    205, 206, // edge 205
    206, 207, // edge 206
    207, 208, // edge 207
    208, 209, // edge 208
    209, 210, // edge 209
    210, 211, // edge 210
    211, 212, // edge 211
    212, 213, // edge 212
    213, 214, // edge 213
    214, 215, // edge 214
    215, 216, // edge 215
    216, 217, // edge 216
    217, 218, // edge 217
    218, 219, // edge 218
    219, 220, // edge 219
    220, 221, // edge 220
    221, 222, // edge 221
    222, 223, // edge 222
    223, 224, // edge 223
    224, 225, // edge 224
    225, 226, // edge 225
    226, 227, // edge 226
    227, 228, // edge 227
    228, 229, // edge 228
    229, 230, // edge 229
    230, 231, // edge 230
    231, 232, // edge 231
    232, 233, // edge 232
    233, 234, // edge 233
    234, 235, // edge 234
    235, 236, // edge 235
    236, 237, // edge 236
    237, 238, // edge 237
    238, 239, // edge 238
    239, 240, // edge 239
    240, 241, // edge 240
    241, 242, // edge 241
    242, 243, // edge 242
    243, 244, // edge 243
    244, 245, // edge 244
    245, 246, // edge 245
    246, 247, // edge 246
    247, 248, // edge 247
    248, 249, // edge 248
    249, 250, // edge 249
    250, 251, // edge 250
    251, 252, // edge 251
    252, 253, // edge 252
    253, 254, // edge 253
    254, 255, // edge 254
    255, 256, // edge 255
    256, 257, // edge 256
    257, 258, // edge 257
    258, 259, // edge 258
    259, 260, // edge 259
    260, 261, // edge 260
    261, 262, // edge 261
    262, 263, // edge 262
    263, 264, // edge 263
    264, 265, // edge 264
    265, 266, // edge 265
    266, 267, // edge 266
    267, 268, // edge 267
    268, 269, // edge 268
    269, 270, // edge 269
    270, 271, // edge 270
    271, 272, // edge 271
    272, 273, // edge 272
    273, 274, // edge 273
    274, 275, // edge 274
    275, 276, // edge 275
    276, 277, // edge 276
    277, 278, // edge 277
    278, 279, // edge 278
    279, 280, // edge 279
    280, 281, // edge 280
    281, 282, // edge 281
    282, 283, // edge 282
    283, 284, // edge 283
    284, 285, // edge 284
    285, 286, // edge 285
    286, 287, // edge 286
    287, 288, // edge 287
    288, 289, // edge 288
    289, 290, // edge 289
    290, 291, // edge 290
    291, 292, // edge 291
    292, 293, // edge 292
    293, 294, // edge 293
    294, 295, // edge 294
    295, 296, // edge 295
    296, 297, // edge 296
    297, 298, // edge 297
    298, 299, // edge 298
    299, 300, // edge 299
    300, 301, // edge 300
    301, 302, // edge 301
    302, 303, // edge 302
    303, 304, // edge 303
    304, 305, // edge 304
    305, 306, // edge 305
    306, 307, // edge 306
    307, 308, // edge 307
    308, 309, // edge 308
    309, 310, // edge 309
    310, 311, // edge 310
    311, 312, // edge 311
    312, 313, // edge 312
    313, 314, // edge 313
    314, 315, // edge 314
    315, 316, // edge 315
    316, 317, // edge 316
    317, 318, // edge 317
    318, 319, // edge 318
    319, 320, // edge 319
    320, 321, // edge 320
    321, 322, // edge 321
    322, 323, // edge 322
    323, 324, // edge 323
    324, 325, // edge 324
    325, 326, // edge 325
    326, 327, // edge 326
    327, 328, // edge 327
    328, 329, // edge 328
    329, 330, // edge 329
    330, 331, // edge 330
    331, 332, // edge 331
    332, 333, // edge 332
    333, 334, // edge 333
    334, 335, // edge 334
    335, 336, // edge 335
    336, 337, // edge 336
    337, 338, // edge 337
    338, 339, // edge 338
    339, 340, // edge 339
    340, 341, // edge 340
    341, 342, // edge 341
    342, 343, // edge 342
    343, 344, // edge 343
    344, 345, // edge 344
    345, 346, // edge 345
    346, 347, // edge 346
    347, 348, // edge 347
    348, 349, // edge 348
    349, 350, // edge 349
    350, 351, // edge 350
    351, 352, // edge 351
    352, 353, // edge 352
    353, 354, // edge 353
    354, 355, // edge 354
    355, 356, // edge 355
    356, 357, // edge 356
    357, 358, // edge 357
    358, 359, // edge 358
    359, 0 // edge 359
};

static QtRigidCircleObject::NodeData node_datas[circle_node_num];

int QtRigidCircleObject::init(
	double x,
	double y,
	double r,
	QVector3D& c,
	GLfloat l_wd
	)
{
	color = c;
	edge_node_num = circle_edge_num * 2;
	line_width = l_wd;

	gl.glGenVertexArrays(1, &vao);
	gl.glBindVertexArray(vao);

    const GLfloat *pcn = circle_nodes;
    for (size_t n_id = 0; n_id < circle_node_num; ++n_id)
    {
        NodeData& nd = node_datas[n_id];
        nd.type = 0;
        nd.x = x + pcn[0] * r;
        nd.y = y + pcn[1] * r;
        pcn += 2;
    }

	gl.glGenBuffers(1, &vbo);
	gl.glBindBuffer(GL_ARRAY_BUFFER, vbo);
    gl.glBufferData(
        GL_ARRAY_BUFFER,
        circle_node_num * sizeof(NodeData),
        node_datas,
        GL_STREAM_DRAW
        );

    // v_type
    gl.glVertexAttribIPointer(0,
        1, GL_INT,
        sizeof(NodeData),
        (GLvoid*)offsetof(NodeData, type)
        );
    gl.glEnableVertexAttribArray(0);
    // v_pos
    gl.glVertexAttribPointer(1,
        2, GL_FLOAT, GL_FALSE,
        sizeof(NodeData),
        (GLvoid*)offsetof(NodeData, x)
        );
    gl.glEnableVertexAttribArray(1);
    // v_color (not used)
    gl.glVertexAttribPointer(2,
        3, GL_FLOAT, GL_FALSE,
        0, (GLvoid*)0
        );
    gl.glEnableVertexAttribArray(2);

	gl.glGenBuffers(1, &veo);
	gl.glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, veo);
	gl.glBufferData(
        GL_ELEMENT_ARRAY_BUFFER,
        sizeof(circle_edges),
        (GLvoid *)circle_edges,
        GL_STATIC_DRAW
        );

	return 0;
}

int QtRigidCircleObject::update(double x, double y, double r)
{
    const GLfloat* pcn = circle_nodes;
    for (size_t n_id = 0; n_id < circle_node_num; ++n_id)
    {
        NodeData& nd = node_datas[n_id];
        nd.x = x + pcn[0] * r;
        nd.y = y + pcn[1] * r;
        pcn += 2;
    }

    gl.glBindBuffer(GL_ARRAY_BUFFER, vbo);
    gl.glBufferSubData(GL_ARRAY_BUFFER,
        0,
        circle_node_num * sizeof(NodeData),
        (GLvoid *)node_datas
        );

    return 0;
}

void QtRigidCircleObject::draw(QOpenGLShaderProgram& shader)
{
	shader.bind();
	shader.setUniformValue("g_color", color);

	gl.glLineWidth(line_width);
	gl.glBindVertexArray(vao);
	gl.glDrawElements(
        GL_LINES,
        edge_node_num,
        GL_UNSIGNED_INT,
        (GLvoid *)0
        );
}